package kr.co.organize;

public class Ex14_Collection {

	public static void main(String[] args) {
		// <컬렉션>
		// 동일한 데이터타입을 묶어서 관리하는 자료구조
		// 저장공간의 크기를 동적으로 관리함
		
		// <컬렉션의 구성요소>
		// * Map은 컬렉션 X
		// 1. 인터페이스 : 각각의 컬렉션을 나타내는 인터페이스(List, Set, Map,...)가 있으며
		//				이를 구현하는 방식으로 작성할 수 있음
		// 2. 클래스 : 같은 List 컬렉션을 사용하더라도 상세 구현이 달라질 수 있음
		//			(ArrayList, LinkedList, HashSet, HashMap, ...)
		// 3. 알고리즘 : 연산, 검색, 정렬 등에 대한 알고리즘은 컬렉션에서 제공
		
		// <컬렉션 인터페이스 특징>
		// 1. List : 순서가 있고 중복을 허용함
		// 2. Set : 순서가 없고 중복을 허용하지 않음
		// 3. Map : 순서가 있고 키(key) 중복 허용하지 않음, 값(value) 중복 허용
		
		// Hash가 들어간다 : 순서보장 X
		// Linked가 들어간다 : 순서보장 O
		
		// <ArrayList vs LinkedList>
		// 1. ArrayList
		//	- 배열형태로 되어 있으며 인덱스를 사용
		//	- 데이터 추가/삭제 등의 작업 시 모든 인덱스가
		//	  앞으로 땡겨지거나 뒤로 밀려나는 등의 불필요한 작업이 필요함
		//	- 데이터 추가/삭제가 느리고 검색이 빠름(index로 접근하기 때문에)
		
		// 2. LinkedList
		//	- 각각의 노드가 데이터와 포인터(다음 데이터의 위치)를 가지고 있음
		//	- 데이터의 추가/삭제 작업이 발생해도 포인터의 값만 수정하면 되기 때문에 빠름
		//	- 검색할 때 맨 앞에서부터 원하는 데이터가 있는 위치까지 모두 거쳐서 가야하기 때문에 느림
		
		
	}

}
