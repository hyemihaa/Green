package kr.co.organize;

public class Ex10_encapsulation {

	public static void main(String[] args) {
		// <접근제어자>
		// 접근을 제어하고, 캡슐화(정보은닉)의 개념 중 하나
		
		// 변수, 메서드의 접근제어자 종류
		// 1. public : 어디서든 접근 가능
		// 2. protected : 같은 클래스 가능, 같은 패키지 가능, 다른 패키지에 있는 자식클래스 가능
		//  			  상속 관계아닌 다른 패키지에서는 접근X
		// 3. (default) : 같은 클래스 가능, 같은 패키지 가능
		//				  다른 패키지에서는 접근X
		// 4. private	: 같은 클래스에서만 가능
		
		// 클래스의 접근제어자 종류
		// 1. public : 어디서든 접근 가능
		// 2. (default) : 같은 패키지 가능
		
		// <캡슐화>
		// 불필요한 정보를 노출시키지 않는 개념
		// 대표적인 예시 : getter / setter
		// 필요한 만큼만 getter / setter를 사용하는것이 좋음
		
		
		// <예약어> static, final
		// 1. static : 객체 생성을 하지 않고, 바로 접근할 수 있도록 해주는 예약어
		// 정적 영역(static or method)에 올라가기 때문에 객체를 생성하지 않아도
		// 항상 메모리에 올라가 있음
		// * 한번 메모리에 올라가면 자바 프로그램이 종료될때 까지 메모리에 올라가있음
		// ex) 클래스명.변수명 / 클래스명.메서드명()
		
		// 2. final : 더이상 변경될 수 없는 상태
		// 클래스 : 상속 불가 (자식클래스를 가질 수 없음)
		// 메서드 : 오버라이딩 불가
		// 변수 : 상수(값을 한번 할당하면 그 이후에 수정 불가)
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

}
