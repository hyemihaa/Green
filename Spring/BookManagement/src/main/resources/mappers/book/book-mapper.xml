<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bookMapper"> <!-- Dao : sqlSession.selectList("freeMapper(-> namespace).freeList(-> id)");  -->

	<resultMap type="book" id="bookResultSet"> <!-- type : mybatis에서 설정한 별칭 id : select태그 -->
		<result column="id" property="id"></result>
		<result column="title" property="bookTitle"></result>
		<result column="author" property="bookAuthor"></result>
		<result column="status" property="status"></result>
		<result column="created_at" property="createDate"></result>
		
		<!-- <result column="id" property="borrowId"></result>  현재 상황에서는 쓰이지 않으므로 주석 처리 ,이런 상황이 오면 resultmap따로 한개 더 만들어서 사용--> 
		<result column="book_id" property="borrowBookId"></result>
		<result column="user_id" property="userId"></result>
		<result column="borrowed_at" property="borrowedDate"></result>
		<result column="returned_at" property="returnedDate"></result>
	</resultMap> <!-- column : 실제 컬럼 명  property : Dto설정 변수명 -->
	
	<select id="bookInfo" resultMap="bookResultSet">
		SELECT * FROM books
	</select>
	
	<select id="searchBook" resultMap="bookResultSet">
		SELECT * FROM books
		WHERE title = #{title}
	</select>
	
	<select id="borrowCheck" resultType="_int">
		SELECT CASE WHEN status = 'available' THEN 1
			   WHEN status = 'borrowed' THEN 0  
			   END AS borrow_check
			   FROM books
		WHERE title = #{title}
	</select>

	<select id="borrowSelectId" resultType="_int">
		SELECT id FROM books
		WHERE title = #{title}
	</select>
	
	<update id="borrowUpdate">
		UPDATE books SET status = 'borrowed'
		WHERE title = #{title}
	</update>
	
	<insert id="bookBorrow">
		INSERT INTO borrow_records 
		VALUES(borrow_records_seq.NEXTVAL,
			   #{borrowId},
			   1,
			   sysdate,
			   NULL)
	</insert>
	
	<select id="checkStatus" resultMap="bookResultSet">
		SELECT id, status FROM books
		WHERE title = #{returnTitle}
	</select>
	
	<select id="checkReturnedAt" resultType="_int">
		SELECT COUNT(*) FROM borrow_records
		WHERE book_id = #{id}
		AND returned_at IS NULL
	</select>
	
	<update id="updateReturnedAt">
		UPDATE borrow_records
		SET returned_at = SYSDATE
		WHERE book_id = #{id}
	</update>
	
	<update id="updateStatus">
		UPDATE books
		SET status = 'available'
		WHERE id = #{id}
	</update>

</mapper>